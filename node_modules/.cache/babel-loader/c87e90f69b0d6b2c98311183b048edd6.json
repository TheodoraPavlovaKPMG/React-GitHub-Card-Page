{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tpavlova1\\\\Downloads\\\\Development\\\\react-github-game\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios'; // GitHub usernames: gaearon, sophiebits, sebmarkbage, bvaughn\n\nconst CardList = props => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 2\n  }\n}, props.profiles.map(profile => /*#__PURE__*/React.createElement(Card, Object.assign({\n  key: profile.id\n}, profile, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 35\n  }\n}))));\n\nclass Card extends React.Component {\n  render() {\n    const profile = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"github-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: profile.avatar_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, profile.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"company\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, profile.company)));\n  }\n\n}\n\nclass Form extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      userName: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n      this.props.onSubmit(resp.data);\n      this.setState({\n        userName: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.userName,\n      onChange: event => this.setState({\n        userName: event.target.value\n      }),\n      placeholder: \"GitHub username\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Add card\"));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      profiles: []\n    };\n\n    this.addNewProfile = profileData => {\n      this.setState(prevState => ({\n        profiles: [...prevState.profiles, profileData]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    }, this.props.title), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.addNewProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      profiles: this.state.profiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  title: \"The GitHub Cards App\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 2\n  }\n}), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/tpavlova1/Downloads/Development/react-github-game/src/index.js"],"names":["React","ReactDOM","reportWebVitals","axios","CardList","props","profiles","map","profile","id","Card","Component","render","avatar_url","name","company","Form","state","userName","handleSubmit","event","preventDefault","resp","get","onSubmit","data","setState","target","value","App","addNewProfile","profileData","prevState","title","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios'; \n\n\n// GitHub usernames: gaearon, sophiebits, sebmarkbage, bvaughn\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\n\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}